type User @model @auth(rules: [{ allow: public }]) {
	#user info
	username: String! @primaryKey
	name: String!
	profilePicture: String
	bio: String
	publicPrivate: Visibility
	highlightColor: String

	#friend info
	friends: [String!]!
	friendRequests: [String!]!
	outgoingFriendRequests: [String!]!

	#group info
	groups: [Group!]! @manyToMany(relationName: "members")
	groupRequests: [Group!]! @manyToMany(relationName: "memberRequests")
	#groupAdmins: [Group!]! @manyToMany(relationName: "groupAdmins")
	groupOwners: [Group!]! @hasMany
	#quiz info
	quizOwners: [Quiz!]! @hasMany
	admin: Boolean! @default(value: "false")
	blocked: Boolean! @default(value: "false")
	quizAnswers: [UserAnswers!]! @hasMany
}


type Group @model @auth(rules: [{ allow: public }]) {
	#group info
	id: ID!
	name: String!
	profilePicture: String
	bio: String
	publicPrivate: Visibility
	highlightColor: String

	#member info
	members: [User!]! @manyToMany(relationName: "members")
	memberRequests: [User!]! @manyToMany(relationName: "memberRequests")
	owner: User! @belongsTo(fields: ["ownerUsername"])
	ownerUsername: String!

	#quiz info
	quizzes: [Quiz]! @manyToMany(relationName: "quizToGroup")
	#quizOwners: [Quiz!]! @hasMany
}

type Quiz @model @auth(rules: [{ allow: public }]) {
	id: ID!
	title: String!
	owner: User! @belongsTo(fields: ["ownerUsername"])
	ownerUsername: String!
	description: String!
	groups: [Group!] @manyToMany(relationName: "quizToGroup")
	questions: [Question!]! @hasMany
	results: [Result!]! @hasMany

	picture: String!

	userAnswers: [UserAnswers!]! @hasMany
	#results: [Result!] @hasMany(indexName: "resultToQuiz", fields: ["id"])
	#topic: String
	#publicPrivate: Visibility
}

type Question @model @auth(rules: [{allow: public}]){
	id: ID!
	quiz: Quiz! @belongsTo(fields: ["quizID"])
	quizID: ID!

	name: String!
	picture: String
	answers: [Answer!]! @hasMany
}

type Answer @model @auth(rules: [{allow: public}]){
	id: ID!
	question: Question! @belongsTo(fields: ["questionID"])
	questionID: ID!

	#quizID: ID!

	name: String!
	#results: [ID!]! 
	weights: [Int!]!
}

type Result @model @auth(rules: [{allow: public}]){
	id: ID!
	quiz: Quiz! @belongsTo(fields: ["quizID"])
	quizID: ID!

	name: String!
	description: String
	picture: String
	index: Int!
}

type UserAnswers @model @auth(rules: [{allow: public}]){
	id: ID!

	user: User! @belongsTo(fields: ["username"])
	username: String!

	quiz: Quiz! @belongsTo(fields: ["quizID"])
	quizID: ID!

	answers: [ID!]! 
	result: ID!
}



enum Visibility {
	public # all users
	private # only friends
	hidden # no users
}

