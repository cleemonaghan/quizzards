type User @model @auth(rules: [{ allow: public }]) {
	#user info
	username: String! @primaryKey
	name: String!
	profilePicture: String
	bio: String
	publicPrivate: Visibility
	highlightColor: String

	#friend info
	friends: Friends @hasOne
	friendRequests: FriendRequests @hasOne

	friendList: [FriendConnection!]! @hasMany

	#group info
	groups: [Group!]! @manyToMany(relationName: "members")
	#groupAdmins: [Group!]! @manyToMany(relationName: "groupAdmins")
	groupOwners: [Group!]! @hasMany
	#quiz info
	quizOwners: [Quiz!]! @hasMany
	admin: Boolean! @default(value: "false")
	blocked: Boolean! @default(value: "false")
}

type Friends @model @auth(rules: [{ allow: public }]) {
	user: User! @belongsTo(fields: ["username"])
	username: String! @primaryKey
	friends: [User!]! @hasMany
}

type Mutation{
	addFriendToFriends(input: addFriendToFriendsInput!): Friends!
}

input addFriendToFriendsInput{
	username: String! 
	user: User!
}

type FriendConnection @model @auth(rules: [{ allow: public }]) {
	user: User! @belongsTo(fields: ["username"])
	username: String!
	friend: User! @belongsTo(fields: ["friendUsername"])
	friendUsername: String!
}

type FriendRequests @model @auth(rules: [{ allow: public }]) {
	user: User! @belongsTo(fields: ["username"])
	username: String! @primaryKey
	friendRequests: [User!]! @hasMany(fields: ["friendUsernames"])
	friendUsernames: [String!]!
}

type Group @model @auth(rules: [{ allow: public }]) {
	#group info
	id: ID! @primaryKey
	name: String!
	profilePicture: String
	bio: String
	publicPrivate: Visibility
	highlightColor: String

	#member info
	members: [User!]! @manyToMany(relationName: "members")
	memberRequests: [User!]!
	owner: User! @belongsTo(fields: ["ownerUsername"])
	ownerUsername: String!

	#quiz info
	#quizOwners: [Quiz!]! @hasMany
}

type Quiz @model @auth(rules: [{ allow: public }]) {
	id: ID! @primaryKey
	quizname: String!
	owner: User! @belongsTo(fields: ["ownerUsername"])
	ownerUsername: String!
	description: String!
	#groups: [Group!] @manyToMany(relationName: "quizToGroup")
	#questions: [Question!] @hasMany(indexName: "questionToQuiz", fields: ["id"])
	#results: [Result!] @hasMany(indexName: "resultToQuiz", fields: ["id"])
	#topic: String
	#publicPrivate: Visibility
}

enum Visibility {
	public # all users
	private # only friends
	hidden # no users
}
